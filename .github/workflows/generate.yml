name: Generate ProtoBuf Files & Auto Tag

on:
  push:
    branches:
      - master
  workflow_dispatch:

permissions:
  contents: write

jobs:
  generate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Generator Repo
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.23

      - name: Install Protobuf Compiler
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler

      - name: Install Go Protobuf Tools
        run: |
          go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest

      - name: Clone Proto Files Repository
        run: |
          git clone https://github.com/shynggys9219/ap2-apis-user-service.git

      - name: Generate Go Code from Proto Files
        run: |
          cd ap2-apis-user-service

          echo "Directory structure:"
          find . -type d

          echo "Listing .proto files:"
          find . -name "*.proto"

          # Clean up previously generated files
          rm -f base/frontend/v1/*.pb.go
          rm -f service/frontend/client/v1/*.pb.go

          # Generate .pb.go files (use source-relative paths!)
          echo "Generating base files..."
          protoc -I. \
            --go_out=paths=source_relative:. \
            base/frontend/v1/client.proto

          echo "Generating service files..."
          protoc -I. \
            --go_out=paths=source_relative:. \
            --go-grpc_out=paths=source_relative:. \
            service/frontend/client/v1/client.proto

          echo "Generated Go files:"
          find . -name "*.pb.go"

          # Ensure files were created
          if [ -z "$(find . -name '*.pb.go')" ]; then
            echo "Error: No .pb.go files generated."
            exit 1
          fi

      - name: Push Generated Code to Gen Repo
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          cd ap2-apis-user-service
          git clone https://github.com/shynggys9219/ap2-apis-gen-user-service.git
          
          # Ensure the target directories exist
          mkdir -p ap2-apis-gen-user-service/base/frontend/v1
          mkdir -p ap2-apis-gen-user-service/service/frontend/client/v1
          
          # Clean out old generated Go files (not folders)
          rm -f ap2-apis-gen-user-service/base/frontend/v1/*.pb.go
          rm -f ap2-apis-gen-user-service/service/frontend/client/v1/*.pb.go
          
          # Copy generated files into the right folders
          cp base/frontend/v1/*.pb.go ap2-apis-gen-user-service/base/frontend/v1/
          cp service/frontend/client/v1/*.pb.go ap2-apis-gen-user-service/service/frontend/client/v1/
          
          cd ap2-apis-gen-user-service
          
          git config --global user.name "shynggys9219"
          git config --global user.email "alshynggys@mail.ru"
          
          git add .
          git add .
  
          if git diff --cached --quiet; then
          echo "No changes to commit. Skipping commit and push."
          else
          git commit -m "Regenerate proto Go files"
          
          # Tag with timestamp-based version
          NEW_TAG="v0.0.$(date +%s)"
          git tag $NEW_TAG
          
          git remote set-url origin https://x-access-token:${{ secrets.PAT_TOKEN }}@github.com/shynggys9219/ap2-apis-gen-user-service.git
          git push origin master --follow-tags
          fi

