name: Generate ProtoBuf Files & Auto Tag

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  generate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Generator Repo
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.22

      - name: Install Protobuf Compiler
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler

      - name: Install Go Protobuf Tools
        run: |
          go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest

      - name: Clone Proto Files Repository
        run: |
          git clone https://github.com/shynggys9219/ap2-apis-user-service.git
          cd ap2-apis-user-service

      - name: Generate Go Code from Proto Files
        run: |
          cd ap2-apis-user-service
          mkdir -p generated
          find . -name "*.proto" -exec protoc --proto_path=. --go_out=./generated --go-grpc_out=./generated {} +

      - name: Verify Generated Files
        run: |
          cd ap2-apis-user-service
          ls -R generated  # List files to confirm generation

      - name: Commit & Push Generated Files
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd ap2-apis-user-service
          git config --global user.name "shynggys9219"
          git config --global user.email "alshynggys@mail.ru"
          git add .
          git commit -m "Generated files from Protobufs" || echo "No changes to commit"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/shynggys9219/ap2-apis-user-service.git
          git push origin master
      
      

      - name: Get latest tag
        id: get_tag
        run: |
          git fetch --tags
          latest_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "::set-output name=tag::$latest_tag"

      - name: Create new tag
        if: success()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd ap2-apis-user-service
          git tag -a v$(date +'%Y%m%d%H%M%S') -m "Generated files"
          git push origin --tags
