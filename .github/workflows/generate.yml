name: Generate ProtoBuf Files & Auto Tag

on:
  push:
    branches:
      - master
  workflow_dispatch:

permissions:
  contents: write

jobs:
  generate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Generator Repo
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.23

      - name: Install Protobuf Compiler
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler

      - name: Install Go Protobuf Tools
        run: |
          go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.33.0
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.3.0
          echo "GOPATH bin: $(go env GOPATH)/bin"
          export PATH="$PATH:$(go env GOPATH)/bin"

      - name: Clone Proto Files Repository
        run: |
          git clone https://github.com/shynggys9219/ap2-apis-user-service.git proto-src

      - name: Generate Go Code from Proto Files
        run: |
          cd proto-src

          echo "Directory structure:"
          find . -type d

          echo "Listing .proto files:"
          find . -name "*.proto"

          # Clean up previously generated files
          find . -name "*.pb.go" -delete

          # Generate Go files from all .proto definitions
          echo "Generating .pb.go and _grpc.pb.go files..."
          find . -name "*.proto" -exec \
            protoc -I. \
              --go_out=paths=source_relative:. \
              --go-grpc_out=paths=source_relative:. \
              {} +

          echo "Generated files:"
          find . -name "*.pb.go"

          if [ -z "$(find . -name '*.pb.go')" ]; then
            echo "Error: No .pb.go files were generated."
            exit 1
          fi

      - name: Push Generated Code to Gen Repo
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          # Clone target repo OUTSIDE of proto repo
          git clone https://github.com/shynggys9219/ap2-apis-gen-user-service.git gen-repo

          # Ensure necessary dirs
          mkdir -p gen-repo/base/frontend/v1
          mkdir -p gen-repo/events/v1
          mkdir -p gen-repo/service/frontend/client/v1

          # Copy over only the generated files
          rsync -av proto-src/base/frontend/v1/*.pb.go gen-repo/base/frontend/v1/ || true
          rsync -av proto-src/events/v1/*.pb.go gen-repo/events/v1/ || true
          rsync -av proto-src/service/frontend/client/v1/*.pb.go gen-repo/service/frontend/client/v1/ || true

          cd gen-repo

          git config --global user.name "shynggys9219"
          git config --global user.email "alshynggys@mail.ru"

          git add .

          if git diff --cached --quiet; then
            echo "No changes to commit. Skipping commit and push."
          else
            git commit -m "Regenerate proto Go files"
            NEW_TAG="v0.0.$(date +%s)"
            git tag "$NEW_TAG"
            git remote set-url origin https://x-access-token:${{ secrets.PAT_TOKEN }}@github.com/shynggys9219/ap2-apis-gen-user-service.git
            git push origin master --follow-tags
          fi
